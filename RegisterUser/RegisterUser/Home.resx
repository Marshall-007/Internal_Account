<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>